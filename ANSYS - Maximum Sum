#include <iostream>
#include<algorithm>
using namespace std;

int main() 
{
	int T,N,M,i,j,s,k,posl,posr,max,flag=0,t,s1,s2;
	cin>>T;
	while(T--)
	{
	    cin>>N>>M;
	    int** A = new int* [N];
	    for(i=0;i<N;++i)
	        A[i] = new int[M];
	    for(i=0;i<N;++i)
	        for(j=0;j<M;++j)
	            cin>>A[i][j];
	    flag=0;
	    s=0;
	    max=A[0][0];
	    posl=0;
	    for(i=1;i<M;++i)
	    {
	        if(A[0][i]>max)
	        {
	            max=A[0][i];
	            posl=i;
	        }
	    }
	    if(posl<=((M-1)/2))
	    {
	        for(i=((M-1)/2)+1;i<M;++i)
	            if(A[0][i]==max)
	            {
	                posr=i;
	                flag=1;
	                break;
	            }
	    }
	    if(flag==0)
	    {
	        if(posl<=((M-1)/2))
	            k=0;
	        else
	            k=1;
	        s=max;
	        for(i=1;i<N;++i)
	        {
	            switch(k)
    	        {
    	            case 0: t=A[i][(((M-1)/2)+1)];
    	                    for(j=(((M-1)/2)+2);j<M;++j)
    	                    {
    	                        if(A[i][j]>t)
    	                        {
    	                            t=A[i][j];
    	                        }
    	                    }
    	                    s+=t;
    	                    k=(k+1)%2;
    	                    break;
    	            case 1: t=A[i][0];
    	                    for(j=1;j<=((M-1)/2);++j)
    	                    {
    	                        if(A[i][j]>t)
    	                        {
    	                            t=A[i][j];
    	                        }
    	                    }
    	                    s+=t;
    	                    k=(k+1)%2;
    	                    break;
    	        }
	        }
	    }
	    else if(flag==1)
	    {
	        k=0;
	        s1=max;
	        for(i=1;i<N;++i)
	        {
	            switch(k)
    	        {
    	            case 0: t=A[i][(((M-1)/2)+1)];
    	                    for(j=(((M-1)/2)+2);j<M;++j)
    	                    {
    	                        if(A[i][j]>t)
    	                        {
    	                            t=A[i][j];
    	                        }
    	                    }
    	                    s1+=t;
    	                    k=(k+1)%2;
    	                    break;
    	            case 1: t=A[i][0];
    	                    for(j=1;j<=((M-1)/2);++j)
    	                    {
    	                        if(A[i][j]>t)
    	                        {
    	                            t=A[i][j];
    	                        }
    	                    }
    	                    s1+=t;
    	                    k=(k+1)%2;
    	                    break;
    	        }
	        }
	        k=1;
	        s2=max;
	        for(i=1;i<N;++i)
	        {
	            switch(k)
    	        {
    	            case 0: t=A[i][(((M-1)/2)+1)];
    	                    for(j=(((M-1)/2)+2);j<M;++j)
    	                    {
    	                        if(A[i][j]>t)
    	                        {
    	                            t=A[i][j];
    	                        }
    	                    }
    	                    s2+=t;
    	                    k=(k+1)%2;
    	                    break;
    	            case 1: t=A[i][0];
    	                    for(j=1;j<=((M-1)/2);++j)
    	                    {
    	                        if(A[i][j]>t)
    	                        {
    	                            t=A[i][j];
    	                        }
    	                    }
    	                    s2+=t;
    	                    k=(k+1)%2;
    	                    break;
    	        }
	        }
	        s=std::max(s1,s2);
	    }
	    cout<<s<<endl;
	    for(int i=0;i<N;++i)
            delete [] A[i];
        delete [] A;
	}
	return 0;
}
